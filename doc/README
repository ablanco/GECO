##########################################################
#                                                        #
#      GECO (Gestor de Contraseñas)                      #
#      Autor: Daniel García Moreno (danigm)              #
#             <dani@danigm.net>                          #
#      fecha: Thu, 02 Apr 2009 12:16:31 +0200            #
#                                                        #
##########################################################

# Introducción:
--------------------------------------------------

GECO es un gestor de contraseñas distribuido capaz de sincronizar
difernetes servidores, con diferentes interfaces de comunicación con el
usuario. Presentanto tanto una interfaz de escritorio en GTK como una
interfaz web desarrollada con python y webpy. Todas las contraseñas se
cifran en cliente con una contraseña maestra que nunca es almacenada.

# Dependencias:
--------------------------------------------------

- servidor:
    sqlalchemy, pyopenssl

- clientes:
    pygtk

# Instalación:
--------------------------------------------------

Hay que descargar el código, ya sea de la forja o a través de este
enlace bzr.danigm.net/geco/tgz

Hay un instalador en el directorio raiz llamado install.sh. Basandose
en distutils de python instala los diferentes módulos seleccionados.

Esta es la ayuda del instalador:
Ayuda del instalador install.sh
   Con este instalador puedes instalar:
     gecod
     gecoc
     gtk-geco
     web-geco

 Usalo pasando como argumento el nombre de lo que quieras instalar
 por ejemplo:
    sudo ./install.sh gecod

Se debe ejecutar con permisos de administración porque pone ficheros
en /etc y /usr/

La aplicación consta de dos partes independientes, el servidor y los
diferentes clientes:

- servidor:
-----------

    -forma automática:
----------------------
    sudo ./install.sh gecod

    Esto preguntará si generar la base de datos (sqlite) y la
    generación de certificado. El certificado es necesario para que la
    conexión vaya a través de ssl, aunque no es necesario que esté
    firmado.

    Cuando se instala se ponen los ficheros en /usr/share/gecod, y los
    módulos en /usr/lib/pythonX.X/site-packages/gecod y la
    configuración en /etc/gecod-xmlrpc.conf

    Se lanza con el comando gecod-xmlrpc. 

    -forma manual:
------------------
    Una vez descargado el código se puede acceder a la parte del
    servidor en src/gecod.
    Lo primero que hay que hacer es generar un certificado en el
    directorio certs, o añadir uno como key.pem y cert.pem. Dentro del
    directorio certs existe un script que lo genera automáticamente:

        $sh generate-pem.sh

    Por otra parte el servidor tira de una base de datos que hay que
    configurar en el fichero backend.py cambiando la variable DATABASE
    por una sqlalchemy válida. Por defecto se puede dejar la que tiene
    y se usará sqlite.

    Para crear la base de datos ejecuta el script database.py:

        $python database.py

    Si has especificado otro tipo de base de datos tendrás que crearla
    cambiando el fichero database.py, en la última línea, añadiendo la
    cadena como argumento a la función create y después ejecutando el
    script.

    Para lanzar el servidor hay que ejecutar el script
    xmlrpc_frontend.py que ofrece la interfaz xmlrpc por el puerto
    4343 por defecto. Se puede configurar en el fichero
    xmlrpc_fontend.py:

        $python xmlrpc_frontend.py 
        Serving HTTPS on 127.0.0.1 port 4343

- cliente:
-----------
    No es necesario montar un servidor para probar los clientes, yo
    tengo uno montado de pruebas en https://danigm.net:8080

    Los clientes se encuentran dentro del directorio src/gecoc/

    De momento hay tres clientes diferentes, el cliente de terminal,
    el cliente gtk y el cliente web.

    gecolib es un módulo python que ofrece una forma simple de acceder
    al frontend xmlrpc que nos da el servidor. Tan solo hay que
    instanciar el objecto gecolib.GSO. Más info pydoc gecolib.

    # terminal-geco
    ---------------

    -forma automática:
----------------------
    sudo ./install.sh gecoc
    Esto instala el módulo gecoc y el script terminal-geco.

    Se lanza con el comando terminal-geco.

    -forma manual:
------------------
    El cliente de terminal es muy simple, se ejecuta con "python
    terminal-geco" y ofrece una interfaz interactiva para registrarse
    en un servidor, añadir contraseñas, etc. Si quieres conectarte a
    un servidor local la ruta por defecto es https://localhost:4343

    # gtk-geco
    ----------

    -forma automática:
----------------------
    sudo ./install.sh gtk-geco

    Esto instala el módulo gecoc además de gtk-geco. Se añaden fichero
    en /usr/share/gtk-geco, el módulo
    /usr/lib/pythonX.X/site-packages/gtkgeco.py y el script gtk-geco

    Se lanza con el comando gtk-geco.
        
    -forma manual:
------------------
    El cliente gtk se encuentra en src/gecoc/gtk-geco. Para lanzarlo
    tan solo hay que entrar en el directorio y ejecutar el comando
    desde allí:
        
        $cd src/gecoc/gtk-geco
        $python gtk-geco.py

    Esto hará que aparezca un icono de sistema. Pulsando con el botón
    derecho aparece un menú, en configuración se debe especificar el
    servidor, el usuario y la contraseña del mismo. Desde esta misma
    ventana también es posible crear una cuenta en un servidor.

    Una vez configurada la cuenta, al pulsar sobre el icono aparecerá
    la lista de contraseñas. Se pueden añadir desde el menú anterior,
    pulsando sobre Add...

    Si se le da a Guardar la configuración se creará un fichero
    cifrado, geco.conf, el cual se usará la próxima vez que lances
    gtk-geco para conectarse, pidiendo tan solo la contraseña maestra.

    Las contraseñas se copian al portapapeles al pulsar sobre su
    nombre. Pedirá la contraseña maestra si no la ha pedido antes o si
    la ha olvidado.

    # web-geco
    ----------
     
    -forma automática:
----------------------
    sudo ./install.sh web-geco

    Esto instala el módulo gecoc además de gtk-geco. Se añaden fichero
    en /usr/share/web-geco y el script web-geco

    Se lanza con el comando web-geco y se puede entrar en la ruta
    http://localhost:8080 Por defecto trata de conectarse a un
    servidor en local https://localhost:4343, por lo tanto habrá que
    lanzar el gecod-xmlrpc antes para que funcione correctamente.

    Para cambiar el servidor al que se conecta hay que modificar el
    fichero /usr/share/web-geco/index.py y cambiar:
    
    web.SERVER = 'https://localhost:4343'

    por el servidor que quieras. Tengo intención de crear una interfaz
    web de administración para cambiar esto.

    -forma manual:
------------------
    El cliente web se encuentra en src/gecoc/web-geco. Antes de
    lanzarlo es necesario crear un enlace a gecoc ya que hace uso de
    gecolib:
        
        $cd src/gecoc/web-geco

    Para especificar a qué servidor se conecta el cliente web hay que
    modificar el fichero index.py y cambiar la variable web.SERVER.
    Por defecto está puesta a 'https://danigm.net:8080' y para hacer
    las pruebas con un servidor local lanzado por defecto habría que
    cambiar esa ruta por 'https://localhost:4343'.

    Una vez creado el enlace, se puede lanzar el cliente web
    ejecutando el script index.py:

        $python index.py

    Podemos usar el cliente web entrando en la ruta
    http://localhost:8080.

    También tengo un cliente web de pruebas en http://geco.danigm.net
    que se puede utilizar sin ningún problema.

# Promoción:
--------------------------------------------------

Para promocionar el proyecto he creado el blog y he ido añadiendo
pequeños tutoriales enseñando la base de diferentes tecnologías que se usan
en él.

Al inicio del proyecto también envié un correo a la lista de correo
python-es para dar a conocer lo que quería hacer y por si alguien quería
colaborar.

Para dar mayor difusión además de la forja de rediris he creado el proyecto
en launchpad.net.

Además estoy dandole difusión a través de twitter/sweetter con cada commit
que hago.
